<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="employeeDAO">
    <select id="selectEmployeeList"  resultType="employeeVO">
        SELECT
        EMP_IDX   AS empIdx,
        EMP_NUM   AS empNum,
        EMP_NAME  AS empName,
        GRO_IDX   AS groIdx,
        (SELECT DIV_NAME FROM ITM_DIVISION D WHERE D.DIV_IDX = E.DIV_IDX) AS empDiv,
        (SELECT POS_NAME FROM ITM_POSITION P WHERE P.POS_IDX = E.POS_IDX) AS posName,
        EMP_MAIL  AS empMail,
        EMP_TEL   AS empTel,
        (SELECT EMP_ST_NAME FROM ITM_EMP_STATE S WHERE S.EMP_ST_IDX = E.EMP_ST_IDX) AS empState
        FROM ITM_EMPLOYE E
        WHERE DEL_YN = 'N'
        <!-- 페이징: pagination 속성명(startList, listSize)에 맞춰서 -->
        LIMIT #{startList}, #{listSize}
    </select>

    <select id="selectEmployeeListCnt" resultType="int">
        SELECT
            count(*) as listCnt
        FROM
            ITM_EMPLOYE
    </select>

    <select id="selectEmployeeView" resultType="employeeVO" parameterType="employeeVO">
        SELECT
            EMP_IDX AS empIdx,
            EMP_NUM AS empNum,
            EMP_NAME AS empName,
            GRO_IDX as groIdx,
            DIV_IDX,
            POS_IDX,
            EMP_ST_IDX,
            (SELECT DIV_NAME FROM ITM_DIVISION AS D WHERE D.DIV_IDX = E.DIV_IDX) AS empDiv,
            (SELECT POS_NAME FROM ITM_POSITION AS P WHERE P.POS_IDX = E.POS_IDX) AS posName,
            EMP_MAIL AS empMail,
            EMP_TEL AS empTel,
            (SELECT EMP_ST_NAME FROM ITM_EMP_STATE AS S WHERE S.EMP_ST_IDX = E.EMP_ST_IDX) AS empState
        FROM ITM_EMPLOYE AS E
        WHERE EMP_IDX = #{empIdx}
          AND DEL_YN = 'N'
    </select>

    <insert id="insertEmployee" parameterType="employeeVO">
        INSERT INTO ITM_EMPLOYE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            GRO_IDX,
            EMP_NUM,
            EMP_NAME,
            <if test="empMail  != null and empMail.trim().length() > 0">EMP_MAIL,</if>
            <if test="empTel   != null and empTel.trim().length() > 0">EMP_TEL,</if>
            DIV_IDX,
            POS_IDX,
            EMP_ST_IDX,
            REG_DATE,
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            1,
            #{empNum},
            #{empName},
            <if test="empMail  != null and empMail.trim().length() > 0">#{empMail},</if>
            <if test="empTel   != null and empTel.trim().length() > 0">#{empTel},</if>
            #{divIdx},
            #{posIdx},
            #{empStIdx},
            NOW(),

        </trim>
    </insert>

    <update id="updateEmployee" parameterType="employeeVO">
        UPDATE
            ITM_EMPLOYE
        SET
            EMP_IDX = #{empIdx},
            EMP_NUM = #{empNum},
            EMP_NAME = #{empName},
            DIV_IDX = #{divIdx},
            POS_IDX = #{posIdx},
            EMP_MAIL = #{empMail},
            EMP_TEL = #{empTel},
            EMP_ST_IDX = #{empStIdx},
            MOD_DATE = NOW()
        WHERE
            EMP_IDX = #{empIdx}
    </update>

    <update id="deleteEmployee" parameterType="employeeVO">
        UPDATE
            ITM_EMPLOYE
        SET
            DEL_YN = 'Y' ,
            DEL_DATE = NOW()
        WHERE
            EMP_IDX = #{empIdx}
    </update>

</mapper>