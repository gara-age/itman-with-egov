<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="groupDAO">
<select id="getHeaderData" parameterType="string" resultType="groupVO">
    SELECT
        (SELECT COUNT(a.ASS_IDX) FROM ITM_ASSET a WHERE a.GRO_IDX = #{groIdx} AND a.DEL_YN = 'N') AS groAssetCnt,
        (SELECT COUNT(e.EMP_IDX) FROM ITM_EMPLOYE e WHERE e.GRO_IDX = #{groIdx} AND e.DEL_YN = 'N') AS groEmployeeCnt,
        (SELECT COUNT(p.POS_IDX) FROM ITM_POSITION p WHERE p.GRO_IDX = #{groIdx} AND p.DEL_YN = 'N') AS groPositionCnt,
        (SELECT COUNT(d.DIV_IDX) FROM ITM_DIVISION d WHERE d.GRO_IDX = #{groIdx} AND d.DEL_YN = 'N') AS groDivisionCnt,
        (SELECT COUNT(s.SUP_IDX) FROM ITM_SUPPLIER s WHERE s.GRO_IDX = #{groIdx} AND s.DEL_YN = 'N') AS groSupplierCnt,
        (SELECT COUNT(l.LOC_IDX) FROM ITM_LOCATION l WHERE l.GRO_IDX = #{groIdx} AND l.DEL_YN = 'N') AS groLocationCnt,
        (SELECT COUNT(ac.ASS_CAT_IDX) FROM ITM_ASSET_CATEGORY ac WHERE ac.GRO_IDX = #{groIdx} AND ac.DEL_YN = 'N') AS groAssetCategoryCnt,
        (SELECT COUNT(asta.STA_IDX) FROM ITM_STATE asta WHERE asta.GRO_IDX = #{groIdx} AND asta.DEL_YN = 'N') AS groAssetStateCnt,
        (SELECT COUNT(esta.EMP_ST_IDX) FROM ITM_EMP_STATE esta WHERE esta.GRO_IDX = #{groIdx} AND esta.DEL_YN = 'N') AS groEmployeeStateCnt
    ;
</select>

    <select id="selectGroupList" parameterType="string" resultType="groupVO">
        SELECT
            GRO_IDX AS groIdx,
            GRO_NAME AS groName,
           (SELECT COUNT(a.ASS_IDX) FROM ITM_ASSET a WHERE a.GRO_IDX = g.GRO_IDX AND a.DEL_YN = 'N') AS groAssetCnt,
            (SELECT COUNT(e.EMP_IDX) FROM ITM_EMPLOYE e WHERE e.GRO_IDX = g.GRO_IDX AND e.DEL_YN = 'N') AS groEmployeeCnt
        FROM
            ITM_GROUP g LEFT JOIN ITM_MEMBER m ON m.MEM_IDX = g.REG_IDX
        WHERE g.DEL_YN = 'N'
          AND m.DEL_YN = 'N'
            AND m.MEM_IDX = #{memIdx}
        ORDER BY g.GRO_IDX
    </select>

    <select id="getAllGroupData" parameterType="string" resultType="groupVO">
        SELECT
            GRO_IDX AS groIdx,
            GRO_NAME AS groName
        FROM
            ITM_GROUP g LEFT JOIN ITM_MEMBER m ON m.MEM_IDX = g.REG_IDX
        WHERE g.DEL_YN = 'N'
          AND m.DEL_YN = 'N'
          AND m.MEM_IDX = #{memIdx}
        ORDER BY g.GRO_IDX
    </select>
    <select id="selectGroup" parameterType="string" resultType="groupVO">
        SELECT
            GRO_IDX AS groIdx,
            GRO_NAME AS groName,
            GRO_IMG AS groImg,
            GRO_NOTE AS groNote
        FROM
            ITM_GROUP
        WHERE
            GRO_IDX = #{groIdx}
    </select>
    <insert id="insertGroup" parameterType="groupVO">
        INSERT INTO
        ITM_GROUP
        <trim prefix="(" suffix=")" suffixOverrides=",">
            GRO_NAME,
            GRO_IMG,
            GRO_NOTE,
            GRO_OWNER_IDX,
            REG_DATE,
            REG_IDX,
            REG_IP
        </trim>
            VALUES
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    #{groName},
                <choose>
                    <when test="groImg != null and groImg != ''">
                        #{groImg},
                    </when>
                    <otherwise>
                        "",
                    </otherwise>
                </choose>
                #{groNote},
                    #{groOwnerIdx},
                NOW(),
                #{regIdx},
                #{regIp}
                </trim>
    </insert>
    <update id="updateGroup" parameterType="groupVO">
        UPDATE
        ITM_GROUP
        SET
            GRO_NAME = #{groName},

              GRO_IMG = #{groImg},

            GRO_NOTE = #{groNote},
            MOD_DATE = NOW(),
            MOD_IDX = #{modIdx},
            MOD_IP = #{modIp}
        WHERE
            GRO_IDX = #{groIdx}
    </update>
    <update id="deleteGroup" parameterType="groupVO">
        UPDATE
            ITM_GROUP
        SET
            DEL_YN = 'Y',
            DEL_DATE = NOW(),
            DEL_IDX = #{delIdx},
            DEL_IP = #{delIp}
        WHERE
            GRO_IDX = #{groIdx}
    </update>
</mapper>